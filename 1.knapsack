#!/bin/python3

import math
import os
import random
import re
import sys

def customKnapsack(capacity, items):
    dp = [0] * (capacity + 1)
    for i in range(1, capacity + 1):
        for item in items:
            if item <= i:
                dp[i] = max(dp[i], dp[i - item] + item)      
    return dp[capacity]

if __name__ == '__main__':
    output_file = open(os.environ['OUTPUT_PATH'], 'w')
    
    num_test_cases = int(input().strip())
    results = []
    
    for _ in range(num_test_cases):
        num_items, knapsack_capacity = map(int, input().strip().split())
        items = list(map(int, input().strip().split()))
        results.append(customKnapsack(knapsack_capacity, items))
    
    for result in results:
        output_file.write(str(result) + '\n')
    
    output_file.close()
